# API

`Resource` is available via `mio.Resource`.

{{#module name="mio"~}}{{>body~}}{{>exported~}}{{/module~}}## Events

All asynchronous events receive a `next` function as the last argument,
which must be called to continue.

`before find one`, `before find many`, and `before count` are unique in that
subsequent event handlers are ignored if `next` is passed a result.

### Persist data using asynchronous events

```javascript
var mio = require('mio');
var MongoClient = require('mongodb').MongoClient;
var User = mio.createModel('user');

User
  .attr('id', { primary: true })
  .attr('name');

User.before('create', function(user, changed, next) {
  MongoClient.connect('mongodb://127.0.0.01:27017/test', function(err, db) {
    if (!user.isNew()) changed._id = user.primary;

    db.collection('user').save(changed, function(err, docs) {
      if (docs) user.primary = docs[0]._id;
      next(err);
    });
  });
});
```

### Model events

#### Asynchronous

`before find one`     Receives arguments `query` and `next(err, result)`. Stops on result.
`before find many`    Receives arguments `query` and `next(err, result)`. Stops on result.
`before count`        Receives arguments `query` and `next(err, result)`. Stops on result.
`before create`       Receives arguments `resource`, `changed`, and `next(err)`.
`before update`       Receives arguments `resource`, `changed`, and `next(err)`.
`before update many`  Receives arguments `query`, `changes`, and `next(err)`.
`before destroy`      Receives arguments `resource` and `next(err)`.
`before destroy many` Receives arguments `query` and `next(err)`.

#### Synchronous

`after find one`      Receives argument `resource`.
`after find many`     Receives argument `collection`.
`after count`         Receives argument `count`.
`after create`        Receives arguments `resource` and `changed`.
`after update`        Receives arguments `resource` and `changed`.
`after update many`   Receives arguments `changes`.
`after destroy`       Receives argument `resource`.
`after destroy many`  Receives argument `query`.
`attribute`           Receives arguments `name` and `params`.
`change`              Receives arguments `resource`, `name`, `value`, and `prev`.
`change:[attr]`       Receives arguments `resource`, `value`, and `prev`.
`initializing`        Receives arguments `resource` and `attributes`.
`initialized`         Receives argument `resource`.
`setting`             Receives arguments `resource` and `attributes`.

### Instance events

#### Asynchronous

`before create`  Receives arguments `changed` and `next(err)`.
`before update`  Receives arguments `changed` and `next(err)`.
`before destroy` Receives argument `next(err)`.

#### Synchronous

`after create`   Receives argument `changed`.
`after update`   Receives argument `changed`.
`after destroy`
`change`         Receives arguments `name`, `value`, and `prev`.
`change:[attr]`  Receives arguments `value`, and `prev`.
`setting`        Receives argument `attributes`.
